apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "5"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"liberty-on-container:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"liberty-on-container\")].image"}]'
    openshift.io/generated-by: OpenShiftNewApp
  creationTimestamp: "2024-12-04T13:17:43Z"
  generation: 5
  labels:
    app: liberty-on-container
    app.kubernetes.io/component: liberty-on-container
    app.kubernetes.io/instance: liberty-on-container
  name: liberty-on-container
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: liberty-on-container
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        deployment: liberty-on-container
    spec:
      volumes:
        - name: tls-ca-bundle
          configMap:
            name: trusted-ca
            items:
              - key: ca-bundle.crt
                path: ca.crt
            defaultMode: 420
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/default/liberty-on-container:latest
        imagePullPolicy: IfNotPresent
        name: liberty-on-container
        env:
          - name: TLS_DIRx
            value: /etc/x509/certs/
          - name: SEC_IMPORT_K8S_CERTS
            value: 'false'
          - name: SEC_TLS_TRUSTDEFAULTCERTS
            value: 'true'
          - name: cert_defaultTrustStore
            value: /etc/x509/certs/ca.crt
          - name: WLP_LOGGING_CONSOLE_LOGLEVEL
            value: info
        volumeMounts:
          - name: tls-ca-bundle
            readOnly: true
            mountPath: /etc/x509/certs/
        ports:
        - containerPort: 9443
          protocol: TCP
        - containerPort: 9080
          protocol: TCP
        resources: {}
      restartPolicy: Always
      securityContext: {}
